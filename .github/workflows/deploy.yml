---
name: Deploy

on:
  workflow_dispatch:
  push:
    branches: ["main"]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          ref: main

      - name: Set up Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: 20.14

      - name: Clean install dependencies and build
        env:
          TEST_WEB_HOST: "${{ secrets.TEST_WEB_HOST || 'https://localhost' }}"
        run: |
          npm ci
          npm run build

      - name: Prep build for upload
        run: |
          mkdir deploy
          cp --parents -rv node_modules api/build api/node_modules client/build client/node_modules deploy > /dev/null
          cp api/package-lock.json api/package.json deploy/api > /dev/null
          cp client/package-lock.json client/package.json deploy/client > /dev/null
          cp package-lock.json package.json deploy > /dev/null
          cp .nvmrc deploy > /dev/null

      - name: Set up SSH key
        env:
          TEST_WEB_SSH_KEY: "${{secrets.TEST_WEB_SSH_KEY}}"
          TEST_WEB_KNOWN_HOSTS: "${{secrets.TEST_WEB_KNOWN_HOSTS}}"
        run: |
          env
          mkdir -p ~/.ssh
          echo ${TEST_WEB_SSH_KEY} | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo ${TEST_WEB_KNOWN_HOSTS} > ~/.ssh/known_hosts

      - name: Upload build to server
        if: success()
        env:
          SSH_HOST: "${{secrets.TEST_WEB_SSH_HOST}}"
          SSH_USER: "${{secrets.TEST_WEB_SSH_USER}}"
          SSH_DEPLOY_PATH: "${{secrets.TEST_WEB_SSH_DEPLOY_PATH}}"
        run: |
          rsync -rzq --delete deploy/ ${SSH_USER}@${SSH_HOST}:${SSH_DEPLOY_PATH}-install
          ssh ${SSH_USER}@${SSH_HOST} -q "cp ${SSH_DEPLOY_PATH}-install/.nvmrc .nvmrc > /dev/null && pm2 save > /dev/null && nvm install && rsync -rzq --delete ${SSH_DEPLOY_PATH}-install/ ${SSH_DEPLOY_PATH} && npm install pm2@latest -g && pm2 update > /dev/null"
